<!DOCTYPE sitepage SYSTEM "sitepage.dtd">
<sitepage>
<title>Treeplate</title>
<description>Xslt scripts for generating a static website.</description>
<lastmod>$LastChangedDate$</lastmod>
<keyword>xslt</keyword><keyword>xhtml</keyword>
<content>
<h1>Treeplate</h1>

<p>Treeplate is a set of xslt scripts for generating static websites.
Authors write xhtml content by hand and provide a description of the 
site hierarchy.
Treeplate generates the site, automatically fitting the content into 
boilerplate xhtml for</p>
<ul>
    <li>headers, including stylesheet, icon, and <a
    href="http://www.w3.org/TR/REC-html40/struct/links.html#h-12.1.2">relation
    links</a>,</li>
    <li>footers, including author and last changed date,</li>
    <li>a hierarchical menu bar without scripting, like the one at left, and,</li>
    <li>a <a href="http://www.sitemaps.org">sitemap</a> file for search engines.</li>
</ul>

<p>Treeplate also adds alternating class attributes to table 
rows—<code>class="row0"</code>, <code>class="row1"</code>—so that they can 
be coloured by a stylesheet if desired.
There is an import feature for inserting generated content, like, for 
example, this <a href="snespp.html">manual page</a>, and a feature for
adding footnotes<footnote>Like this one!</footnote>.
The boilerplate generation makes it easy to experiment with specialized 
support for troublesome browser software without having to manually edit 
all pages.
Similarly, site redesigns may only require changes to the stylesheet and 
automatically-generated elements.
</p>

<p>If your (planned) website is predominantly static and you prefer to 
create it in a text editor but you want to avoid the tedium of 
copy-paste-modify for the common bits, then Treeplate could be for you!</p>

<p>This website was generated by Treeplate.</p>

<h2 id="download">Download</h2>

<p>Treeplate is released under a <a href="bsdlicense.html">BSD license</a>.
It may be used and modified without restriction but no guarantees or support are offered.
Nevertheless, patches, problem reports, and suggestions for improvement (in keeping
with the minimalist philosophy) are <a
href="mailto:tbourke@cse.unsw.edu.au">welcomed</a>.</p>

<p>The current version is available for download: <a
href="treeplate-1.0.0.tar.gz">Treeplate 1.0.0</a>.
It is intended for unix systems and requires a Bourne shell and <a
href="http://xmlsoft.org/XSLT/xsltproc2.html">xsltproc</a>.
It should also work with other xslt processors and only requires xslt 1.0,
xpath 1.0, and the <a href="http://www.exslt.org/exsl/elements/document">exsl:document</a> extension.
</p>

<h2 id="operation">Operation</h2>

<div class="figure" id="fig_1">
  <img id="fig_1img" src="treeplate.png"
   alt="treeplate, inputs: sitetree.xml, sitemaps.xml, outputs: sitemap.xml, sitepages.html"
   title="Figure 1: Source and destination files" />
  <div class="caption">
      <span class="caption">Figure 1:</span> Source and destination files<footnote>
	<a href="#fig_1">Figure 1</a> uses elements from <a
		href="http://commons.wikimedia.org/wiki/Image:XSLT_en.svg">Image:XSLT
		en.svg</a> by Dreftymac.
	    It is released under a <a
		href="http://en.wikipedia.org/wiki/Creative_Commons">Creative
		Commons</a> <a
		href="http://creativecommons.org/licenses/by/2.5/">Attribution
		2.5</a> license.
      </footnote>
  </div>
</div>

<p>Treeplate requires these files and directories:</p>
<table>
<tr><td>src</td>
    <td>Contains <code>sitetree.xml</code> and the content <code>sitepage</code> files.</td>
</tr>
<tr><td>dst</td>
    <td>Must replicate the directory structure of <code>src</code>.
    Contains any non-generated files, such as css style sheets, images, and 
    pdf documents.</td>
</tr>
<tr><td>xsltsrc</td>
    <td>Contains the xslt scripts; <code>makepage.xsl</code> can be modified
    to change the boilerplate.</td>
</tr>
<tr><td>makesite.sh</td>
    <td>This simple shell script transforms xml files in <code>src</code> 
    into html files in <code>dst</code>.</td>
</tr>
</table>

<h3 id="sitetree">The sitetree.xml file</h3>

<p>The <code>sitetree.xml</code> file describes the hierarchical structure
of a site.
An edited extract from this website is:</p>
<pre>
&lt;!DOCTYPE sitetree SYSTEM "sitetree.dtd"&gt;
&lt;sitetree&gt;
    &lt;rooturl&gt;http://www.cse.unsw.edu.au/~tbourke&lt;/rooturl&gt;
    &lt;prefix&gt;Timothy Bourke - &lt;/prefix&gt;
    &lt;style&gt;basic.css&lt;/style&gt;
    &lt;icon&gt;favicon.ico&lt;/style&gt;

    &lt;item homelink="yes" priority="1.0"&gt;
	&lt;name&gt;Home&lt;/name&gt;
	&lt;file&gt;index&lt;/file&gt;

	&lt;item directory="papers"&gt;
	    &lt;name&gt;Papers&lt;/name&gt;
	    &lt;file&gt;abstracts&lt;/file&gt;
	&lt;/item&gt;

	&lt;item changefreq="yearly"&gt;
	    &lt;name&gt;Address&lt;/name&gt;
	    &lt;file&gt;mail&lt;/file&gt;
	&lt;/item&gt;
    &lt;/item&gt;

    &lt;item directory="software"&gt;
	&lt;name&gt;Software&lt;/name&gt;
	&lt;file&gt;index&lt;/name&gt;

	&lt;item&gt;Treeplate&lt;/name&gt;
	&lt;file&gt;treeplate&lt;/file&gt;
    &lt;/item&gt;
&lt;/sitetree&gt;
</pre>
<p>Two hierarchies are described: that of items as presented to visitors, and
that of the organisation on disk.
The latter may be simpler than the former and is expressed by the
<code>item</code> <code>directory</code> attributes.
The full list of item attributes is:</p>

<table>
<tr><td><code>directory</code></td>
    <td>describes how the files are stored on disk.</td>
</tr>
<tr><td><code>inmenu</code></td>
    <td>if <code>"no"</code> the item is excluded from the navigation
    menu.</td>
</tr>
<tr><td><code>homelink</code></td>
    <td><code>"yes"</code> marks the home page (for relation links).</td>
</tr>
<tr><td><code>sitemap</code></td>
    <td>if <code>"no"</code> the item is excluded from
    <code>sitemap.xml</code>.</td>
</tr>
<tr><td><code>changefreq</code></td>
    <td>inserted directly into <code>sitemap.xml</code>.</td>
</tr>
</table>

<p>Each item must contain <code>name</code> and <code>file</code> elements
giving the name to be used in titles and the menu, and naming the source,
<code>file.xml</code>, and destination, <code>file.html</code>, files.
An item may contain other items.
Extra elements inside <code>item</code>, or <code>sitetree</code> itself,
are inherited by that branch of the hierarchy.
The possibilities are:</p>

<table>
<tr><td><code>prefix</code></td>
    <td>Text inserted into the page title.</td>
</tr>
<tr><td><code>suffix</code></td>
    <td>Text inserted into the page title.</td>
</tr>
<tr><td><code>author</code></td>
    <td>Author name, with <code>href</code> attribute.</td>
</tr>
<tr><td><code>style</code></td>
    <td>Filename of a css stylesheet.</td>
</tr>
<tr><td><code>icon</code></td>
    <td>Filename of a page icon.</td>
</tr>
<tr><td><code>link</code></td>
    <td>Additional relation links, for instance for <code>copyright</code> 
    and <code>content</code>, specified in a <code>rel</code> attribute; the 
    element must contain a url.</td>
</tr>
<tr><td><code>keyword</code></td>
    <td>Multiple keywords can be specified, they are not inherited if the 
    attribute <code>inherit</code> is <code>"no"</code>.
    Non-inherited keywords can also be specified in the page source files.</td>
</tr>
</table>

<p>The root <code>sitetree</code> element must contain <code>rooturl</code>, 
which is required to generate <code>sitemap.xml</code>.
All other generated links are relative.</p>

<h3 id="sitepage">The source files</h3>

<p>The source file for this page resembles:</p>

<pre>
&lt;!DOCTYPE sitepage SYSTEM "sitepage.dtd"&gt;
&lt;sitepage&gt;
    &lt;title&gt;Treeplate&lt;/title&gt;
    &lt;description&gt;Xslt scripts for generating a static website.&lt;/description&gt;
    &lt;lastmod&gt;&#36;LastChangedDate: 2008-06-06 12:50:53 +1000 (Fri, 06 Jun 2008) &#36;&lt;/lastmod&gt;
    &lt;keyword&gt;xslt&lt;/keyword&gt;&lt;keyword&gt;xhtml&lt;/keyword&gt;
    &lt;content&gt;
    &lt;h1&gt;Treeplate&lt;/h1&gt;
    &lt;p&gt;Treeplate is a set of xslt scripts for generating static websites.
    ...
    &lt;/content&gt;
&lt;/sitepage&gt;
</pre>

<p>The list of all possible elements:</p>

<table>
<tr><td><code>title</code></td>
    <td>The page title.
        An inherited prefix or suffix can be ignored with, respectively, the
	attributes <code>prefix="no"</code> and <code>suffix="no"</code>.</td>
</tr>
<tr><td><code>description</code></td>
    <td>The page description.</td>
</tr>
<tr><td><code>lastmod</code></td>
    <td>The last modified date for insertion into the footer.
	The &#36; signs, from subversion tags, are removed if present.</td>
</tr>
<tr><td><code>keyword</code></td>
    <td>Associated keyword.
	Multiple <code>keyword</code> elements may be given.
	They are combined with the inherited keywords.</td>
</tr>
<tr><td><code>author</code></td>
    <td>Overrides the inherited <code>author</code> attribute.
    An <code>href</code> attribute must be given.</td>
</tr>
<tr><td><code>header</code></td>
    <td>Optional additional elements for insertion into the destination
	<code>head</code>.</td>
</tr>
<tr><td><code>content</code></td>
    <td>Xhtml content for insertion into the generated page.
	<ul class="lessgap">
	<li>The content is usually wrapped in a <code>div</code> with 
	<code>id="main"</code>, but the <code>id</code> value can be
	overridden with a <code>mainid</code> attribute.</li>

	<li>The <code>footer="no"</code> attribute will disable the addition of 
	a page footer.</li>

	<li>A <code>class</code> attribute is added to <code>tr</code>
	elements, as described above, if they do not already have one.</li>

	<li>The content may contain <code>import</code> tags with an 
	<code>href</code> attribute, relative to the source file, to insert 
	generated content.</li>

	<li>The content may contain <code>footnote</code> tags containing
	inline html elements.
	Footnotes are replaced with a link to the full text.</li>
	</ul></td>
</tr>
</table>

<p>Sometimes links change when a website is rearranged.
Redirection pages can be generated by giving <code>title</code> and 
<code>redirect</code> elements only.
The latter must have a single <code>href</code> attribute containing the
updated url.</p>

<h3 id="validation">Validation</h3>

<p>Document Type Definitions are provided for the <a
href="../xml/sitetree.dtd">sitetree</a> and
<a href="../xml/sitepage.dtd">sitepage</a> files, they rely on the modular
xhtml 1.0 definitions,
but validation is disabled in <code>makesite.sh</code> by default.
It can be enabled by removing the <code>--novalid</code> option from the
call to <code>xsltproc</code>.</p>
</content>
</sitepage>
